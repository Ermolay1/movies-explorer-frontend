{"ast":null,"code":"class AuthApi {\n  constructor(basePath) {\n    this._basePath = basePath;\n  }\n  _getJson(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n  registerUser(name, email, password) {\n    return fetch(`${this._basePath}/signup`, {\n      method: \"POST\",\n      headers: {\n        'Accept': 'application/json',\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    }).then(res => this._getJson(res));\n  }\n  loginUser(email, password) {\n    return fetch(`${this._basePath}/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    }).then(res => this._getJson(res));\n  }\n  checkToken(token) {\n    return fetch(`${this._basePath}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`\n      }\n    }).then(res => this._getJson(res));\n  }\n}\nconst authApi = new AuthApi(\"https://api.movies.neydy.nomoreparties.sbs\");\nexport default authApi;","map":{"version":3,"names":["AuthApi","constructor","basePath","_basePath","_getJson","res","ok","json","Promise","reject","status","registerUser","name","email","password","fetch","method","headers","body","JSON","stringify","then","loginUser","checkToken","token","Authorization","authApi"],"sources":["C:/Users/Леха/Documents/dev/first-project/movies-explorer-frontend/src/utils/AuthApi.js"],"sourcesContent":["class AuthApi {\n    constructor(basePath) {\n      this._basePath = basePath;\n    }\n\n    _getJson(res) {\n      if (res.ok) {\n        return res.json();\n      }\n      return Promise.reject(`Ошибка: ${res.status}`);\n    }\n \n    registerUser(name, email, password) {\n      return fetch(`${this._basePath}/signup`, {\n        method: \"POST\",\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({name, email, password }),\n      }).then((res) => this._getJson(res));\n    }\n  \n  \n    loginUser(email, password) {\n      return fetch(`${this._basePath}/signin`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ email, password }),\n      }).then((res) => this._getJson(res));\n    }\n  \n   \n    checkToken(token) {\n      return fetch(`${this._basePath}/users/me`, {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }).then((res) => this._getJson(res));\n    }\n    \n  }\n  const authApi = new AuthApi(\"https://api.movies.neydy.nomoreparties.sbs\");\n  export default authApi;"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EACVC,WAAWA,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACC,SAAS,GAAGD,QAAQ;EAC3B;EAEAE,QAAQA,CAACC,GAAG,EAAE;IACZ,IAAIA,GAAG,CAACC,EAAE,EAAE;MACV,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;IACnB;IACA,OAAOC,OAAO,CAACC,MAAM,CAAE,WAAUJ,GAAG,CAACK,MAAO,EAAC,CAAC;EAChD;EAEAC,YAAYA,CAACC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAE;IAClC,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,SAAU,SAAQ,EAAE;MACvCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAACR,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAC/C,CAAC,CAAC,CAACO,IAAI,CAAEhB,GAAG,IAAK,IAAI,CAACD,QAAQ,CAACC,GAAG,CAAC,CAAC;EACtC;EAGAiB,SAASA,CAACT,KAAK,EAAEC,QAAQ,EAAE;IACzB,OAAOC,KAAK,CAAE,GAAE,IAAI,CAACZ,SAAU,SAAQ,EAAE;MACvCa,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEP,KAAK;QAAEC;MAAS,CAAC;IAC1C,CAAC,CAAC,CAACO,IAAI,CAAEhB,GAAG,IAAK,IAAI,CAACD,QAAQ,CAACC,GAAG,CAAC,CAAC;EACtC;EAGAkB,UAAUA,CAACC,KAAK,EAAE;IAChB,OAAOT,KAAK,CAAE,GAAE,IAAI,CAACZ,SAAU,WAAU,EAAE;MACzCa,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCQ,aAAa,EAAG,UAASD,KAAM;MACjC;IACF,CAAC,CAAC,CAACH,IAAI,CAAEhB,GAAG,IAAK,IAAI,CAACD,QAAQ,CAACC,GAAG,CAAC,CAAC;EACtC;AAEF;AACA,MAAMqB,OAAO,GAAG,IAAI1B,OAAO,CAAC,4CAA4C,CAAC;AACzE,eAAe0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}