{"ast":null,"code":"import _defineProperty from\"C:/Users/\\u041B\\u0435\\u0445\\u0430/Documents/dev/first-project/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"C:/Users/\\u041B\\u0435\\u0445\\u0430/Documents/dev/first-project/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"C:/Users/\\u041B\\u0435\\u0445\\u0430/Documents/dev/first-project/movies-explorer-frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/*import { useState, useCallback } from 'react';\nimport isEmail from 'validator/es/lib/isEmail';\n\nexport default function useFormWithValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const input = e.target;\n    console.log(input.value)\n    const { value, name } = input;\n\n    if (name === 'name' && input.validity.patternMismatch) {\n      input.setCustomValidity('Имя должно содержать только латиницу, кириллицу, пробел или дефис.')\n    } else {\n      input.setCustomValidity('');\n    }\n\n    if (name === 'email') {\n      if (!isEmail(value)) {\n          input.setCustomValidity('Некорректый адрес почты.');\n      } else {\n          input.setCustomValidity('');\n      }\n    }\n\n    setValues({ ...values, [name]: value }); \n    setErrors({ ...errors, [name]: input.validationMessage }); \n    setIsValid(input.closest('form').checkValidity()); \n  };\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => { \n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, errors, isValid, handleChange, resetForm, setIsValid };\n}*/import{useState,useCallback}from'react';import isEmail from'validator/lib/isEmail';export default function useFormWithValidation(){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isValid=_useState6[0],setIsValid=_useState6[1];var handleChange=function handleChange(event){var target=event.target;var name=target.name,value=target.value;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,value)));setErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},name,target.validationMessage)));setIsValid(target.closest(\"form\").checkValidity());if(target.closest(\"form\").checkValidity()&&name==='email'&&!isEmail(value)){setErrors(_objectSpread(_objectSpread({},errors),{},_defineProperty({},name,'Введена невалидная почта')));setIsValid(false);}};var resetForm=useCallback(function(){var newValues=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var newErrors=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var newIsValid=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;setValues(newValues);setErrors(newErrors);setIsValid(newIsValid);},[setValues,setErrors,setIsValid]);return{values:values,setValues:setValues,handleChange:handleChange,errors:errors,isValid:isValid,setIsValid:setIsValid,resetForm:resetForm};}","map":{"version":3,"names":["useState","useCallback","isEmail","useFormWithValidation","_useState","_useState2","_slicedToArray","values","setValues","_useState3","_useState4","errors","setErrors","_useState5","_useState6","isValid","setIsValid","handleChange","event","target","name","value","_objectSpread","_defineProperty","validationMessage","closest","checkValidity","resetForm","newValues","arguments","length","undefined","newErrors","newIsValid"],"sources":["C:/Users/Леха/Documents/dev/first-project/movies-explorer-frontend/src/hook/useFormWithValidation.jsx"],"sourcesContent":["/*import { useState, useCallback } from 'react';\nimport isEmail from 'validator/es/lib/isEmail';\n\nexport default function useFormWithValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = (e) => {\n    const input = e.target;\n    console.log(input.value)\n    const { value, name } = input;\n\n    if (name === 'name' && input.validity.patternMismatch) {\n      input.setCustomValidity('Имя должно содержать только латиницу, кириллицу, пробел или дефис.')\n    } else {\n      input.setCustomValidity('');\n    }\n\n    if (name === 'email') {\n      if (!isEmail(value)) {\n          input.setCustomValidity('Некорректый адрес почты.');\n      } else {\n          input.setCustomValidity('');\n      }\n    }\n\n    setValues({ ...values, [name]: value }); \n    setErrors({ ...errors, [name]: input.validationMessage }); \n    setIsValid(input.closest('form').checkValidity()); \n  };\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => { \n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, errors, isValid, handleChange, resetForm, setIsValid };\n}*/\nimport { useState, useCallback } from 'react';\nimport isEmail from 'validator/lib/isEmail';\n\nexport default function useFormWithValidation() {\n  const [values, setValues] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isValid, setIsValid] = useState(false);\n\n  const handleChange = (event) => {\n    const target = event.target;\n    const { name, value } = target;\n    setValues({...values, [name]: value});\n    setErrors({...errors, [name]: target.validationMessage });\n    setIsValid(target.closest(\"form\").checkValidity());\n    if (target.closest(\"form\").checkValidity() && name === 'email' && !isEmail(value)) {\n      setErrors({...errors, [name]: 'Введена невалидная почта' })\n      setIsValid(false);\n    }\n  };\n\n  const resetForm = useCallback(\n    (newValues = {}, newErrors = {}, newIsValid = false) => {\n      setValues(newValues);\n      setErrors(newErrors);\n      setIsValid(newIsValid);\n    },\n    [setValues, setErrors, setIsValid]\n  );\n\n  return { values, setValues, handleChange, errors, isValid, setIsValid, resetForm };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}